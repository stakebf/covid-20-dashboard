[{"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\index.js":"1","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\store\\index.js":"2","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\App\\index.js":"3","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx":"4","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx":"5","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx":"6","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\reducers\\index.js":"7","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\index.js":"8","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getStatistics.js":"9","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js":"10","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx":"11","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx":"12","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx":"13","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx":"14","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js":"15","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\services\\WorldometrsService.js":"16","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\countriesCoordinates.js":"17","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tabs\\index.js":"18","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\tabsNames.js":"19","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js":"20","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js":"21","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\chartHelpers.js":"22","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\chartConfig.js":"23","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Chart\\index.js":"24","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Header\\index.js":"25","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Footer\\index.js":"26","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js":"27","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js":"28","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\index.js":"29","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\view\\keyboard.js":"30","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\controller\\listeners.js":"31","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\view\\renderKeyboardKeys.js":"32","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\toggleCaps.js":"33","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\audio.js":"34","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\shift.js":"35","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Preloader\\index.js":"36"},{"size":295,"mtime":1608496611671,"results":"37","hashOfConfig":"38"},{"size":604,"mtime":1608313503754,"results":"39","hashOfConfig":"38"},{"size":1039,"mtime":1608762991675,"results":"40","hashOfConfig":"38"},{"size":1492,"mtime":1608758735335,"results":"41","hashOfConfig":"38"},{"size":5444,"mtime":1608758735339,"results":"42","hashOfConfig":"38"},{"size":4557,"mtime":1608758735333,"results":"43","hashOfConfig":"38"},{"size":1744,"mtime":1608746315268,"results":"44","hashOfConfig":"38"},{"size":3369,"mtime":1608733583639,"results":"45","hashOfConfig":"38"},{"size":136,"mtime":1608496611670,"results":"46","hashOfConfig":"38"},{"size":672,"mtime":1608733583639,"results":"47","hashOfConfig":"38"},{"size":1742,"mtime":1608731625765,"results":"48","hashOfConfig":"38"},{"size":2408,"mtime":1608758735340,"results":"49","hashOfConfig":"38"},{"size":2415,"mtime":1608758735334,"results":"50","hashOfConfig":"38"},{"size":1444,"mtime":1608764361053,"results":"51","hashOfConfig":"38"},{"size":238,"mtime":1608313503747,"results":"52","hashOfConfig":"38"},{"size":1513,"mtime":1608733583641,"results":"53","hashOfConfig":"38"},{"size":26503,"mtime":1608476278313,"results":"54","hashOfConfig":"38"},{"size":1570,"mtime":1608758735341,"results":"55","hashOfConfig":"38"},{"size":176,"mtime":1608634702864,"results":"56","hashOfConfig":"38"},{"size":1315,"mtime":1608733583637,"results":"57","hashOfConfig":"38"},{"size":1985,"mtime":1608758735333,"results":"58","hashOfConfig":"38"},{"size":4520,"mtime":1608746315267,"results":"59","hashOfConfig":"38"},{"size":1716,"mtime":1608763035595,"results":"60","hashOfConfig":"38"},{"size":1216,"mtime":1608749345881,"results":"61","hashOfConfig":"38"},{"size":238,"mtime":1608746315266,"results":"62","hashOfConfig":"38"},{"size":793,"mtime":1608769028924,"results":"63","hashOfConfig":"38"},{"size":2165,"mtime":1608760083518,"results":"64","hashOfConfig":"38"},{"size":659,"mtime":1608758735330,"results":"65","hashOfConfig":"38"},{"size":304,"mtime":1608762991681,"results":"66","hashOfConfig":"38"},{"size":1404,"mtime":1608762991687,"results":"67","hashOfConfig":"38"},{"size":12956,"mtime":1608762991681,"results":"68","hashOfConfig":"38"},{"size":5095,"mtime":1608762991688,"results":"69","hashOfConfig":"38"},{"size":264,"mtime":1608762991685,"results":"70","hashOfConfig":"38"},{"size":578,"mtime":1608762991683,"results":"71","hashOfConfig":"38"},{"size":1511,"mtime":1608762991685,"results":"72","hashOfConfig":"38"},{"size":318,"mtime":1608762991689,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ldy8hi",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\index.js",[],["150","151"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\store\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\App\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx",["152"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\reducers\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getStatistics.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx",["153"],"import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport classes from './MapContainer.module.scss';\r\n\r\nconst Legend = () => {\r\n    const map = useMap();\r\n    console.log(map);\r\n\r\n    useEffect(() => {\r\n        const getColor = num => {\r\n            console.log(num > 10000, num, '800026')\r\n            return num > 1000000\r\n                ? \"#BD0026\"\r\n                : num > 500000\r\n                    ? \"#E31A1C\"\r\n                    : num > 100000\r\n                        ? \"#FC4E2A\"\r\n                        : num > 50000\r\n                            ? \"#FD8D3C\"\r\n                            : num > 10000\r\n                                ? \"#FEB24C\"\r\n                                : num > 1000\r\n                                    ? \"#dfdc15\"\r\n                                    : \"#4ddb0b\";\r\n        }\r\n\r\n        const legend = L.control({ position: \"bottomright\" });\r\n\r\n        legend.onAdd = () => {\r\n            const div = L.DomUtil.create(\"div\", \"info legend\");\r\n            const grades = [0, 1000, 10000, 50000, 100000, 500000, 1000000];\r\n            let labels = [];\r\n            let from;\r\n            let to;\r\n\r\n            for (let i = 0; i < grades.length; i++) {\r\n                from = grades[i];\r\n                to = grades[i + 1];\r\n                labels.push(\r\n                    `<div class=${classes.label__item}><span style=\"background:${getColor(from + 1)}\" class=${classes.label__color}></span><span> ${to ? to : +grades[i]}</span></div>`\r\n                );\r\n            }\r\n            div.innerHTML = labels.join(\"<br>\");\r\n            return div;\r\n        };\r\n\r\n        legend.addTo(map);\r\n    }, []);\r\n    return null;\r\n};\r\n\r\nexport default Legend;\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx",["154"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\services\\WorldometrsService.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\countriesCoordinates.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tabs\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\tabsNames.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\chartHelpers.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\chartConfig.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Chart\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Header\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Footer\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js",["155"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\view\\keyboard.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\controller\\listeners.js",["156","157","158","159","160"],"import getShiftValue from '../model/shift';\r\nimport toggleCapsLock from '../model/toggleCaps';\r\nimport renderKeyBoard from '../view/renderKeyboardKeys';\r\nimport makeSound from '../model/audio';\r\n\r\nconst state = {\r\n    isShift: false,\r\n    lang: 'EN',\r\n    isCaps: false,\r\n    currentCursor: 0,\r\n    content: '',\r\n    isMute: false,\r\n    isHide: true\r\n}\r\n\r\nconst setFocus = () => {\r\n    const keyboardInput = document.querySelector('#outlined-basic');\r\n    keyboardInput.selectionStart = state.currentCursor;\r\n    keyboardInput.selectionEnd = state.currentCursor;\r\n    keyboardInput.focus();\r\n}\r\n\r\nconst listen = (setSearchTerm, searchTerm) => {\r\n    let shift,\r\n        keyElements,\r\n        keyboardInput,\r\n        hide;\r\n\r\n    const init = () => {\r\n        shift = document.querySelector('.keyboard__key--shift');\r\n        keyElements = document.querySelectorAll(\".keyboard__key\");\r\n        keyboardInput = document.querySelector('#outlined-basic');\r\n        hide = document.querySelector('.hide_btn');\r\n    }\r\n    init()\r\n\r\n    const initkeys = () => {\r\n\r\n        keyElements.forEach(key => {\r\n            key.addEventListener(\"click\", (e) => {\r\n                const keyboardInput = document.querySelector('#outlined-basic');\r\n                if (key.classList.contains('caps')) {\r\n                    if (!state.isMute) makeSound('special');\r\n                    clickCaps(key)\r\n                    if (state.isShift) getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                    return;\r\n                } else if (key.classList.contains('backspace')) {\r\n                    if (!state.isMute) makeSound('backpace');\r\n                    if (keyboardInput.value.length === 0) return;\r\n                    const currentArr = keyboardInput.value.split('');\r\n                    currentArr.splice(state.currentCursor - 1, 1);\r\n                    state.content = currentArr.join('');\r\n                    keyboardInput.value = state.content;\r\n                    setSearchTerm(keyboardInput.value);\r\n                    state.currentCursor -= 1;\r\n                    setFocus();\r\n                    return;\r\n                } else if (key.classList.contains('enter')) {\r\n                    if (!state.isMute) makeSound('enter');\r\n                    clickEnter();\r\n                } else if (key.classList.contains('space')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    state.content += \" \";\r\n                    keyboardInput.value += \" \";\r\n                    state.currentCursor += 1;\r\n                    setSearchTerm(keyboardInput.value);\r\n                    setFocus();\r\n                } else if (key.classList.contains('left-arrow')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    if (state.currentCursor !== 0) {\r\n                        state.currentCursor -= 1;\r\n                    }\r\n                    setFocus();\r\n                } else if (key.classList.contains('right-arrow')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    if (state.currentCursor <= keyboardInput.value.length - 1) {\r\n                        state.currentCursor += 1;\r\n                    }\r\n                    setFocus();\r\n                } else if (key.classList.contains('shift')) {\r\n                    key.classList.toggle(\"keyboard__key--active\");\r\n                    if (!state.isMute) makeSound('shift');\r\n                    if (!state.isShift && state.isCaps) {\r\n                        state.isShift = true;\r\n                        renderKeyBoard(state.lang, state.isCaps, state.isMute, state.isShift);\r\n                        init();\r\n                        initkeys();\r\n                        setFocus();\r\n                        getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                        return;\r\n                    } else if (state.isShift) {\r\n                        state.isShift = false;\r\n                        renderKeyBoard(state.lang, state.isCaps, state.isMute, state.isShift);\r\n                        init();\r\n                        initkeys();\r\n                        setFocus();\r\n                        return;\r\n                    } else {\r\n                        state.isShift = true;\r\n                        getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                        setFocus();\r\n                        return;\r\n                    }\r\n\r\n                } else if (key.classList.contains('lang')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    if (state.lang === 'EN') {\r\n                        state.lang = 'RU';\r\n                        setFocus();\r\n                    } else {\r\n                        state.lang = 'EN';\r\n                        setFocus();\r\n                    }\r\n                    renderKeyBoard(state.lang, state.isCaps, state.isMute, state.isShift);\r\n                    init();\r\n                    initkeys();\r\n                } else if (key.classList.contains('done')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    state.content = \"\";\r\n                    document.querySelector(\".keyboard\").classList.add(\"keyboard--hidden\");\r\n                } else if (key.classList.contains('mute')) {\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    key.classList.toggle(\"keyboard__key--active\");\r\n                    state.isMute = !state.isMute;\r\n                }\r\n                if (key.classList.contains('keyboard__key--elem')) {\r\n                    const pressed = document.querySelector('.key__pressed');\r\n                    if (pressed) pressed.classList.remove('key__pressed');\r\n                    if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n                    const currentArr = keyboardInput.value.split('');\r\n                    const value = key.innerHTML === \"&gt;\" ? \">\" : key.innerHTML === \"&lt;\" ? \"<\" : key.innerText;\r\n                    currentArr.splice(state.currentCursor, 0, value);\r\n                    state.content = currentArr.join('');\r\n                    document.querySelector('#outlined-basic').value = state.content;\r\n                    setSearchTerm(keyboardInput.value);\r\n                    state.currentCursor += 1;\r\n                    setFocus();\r\n                }\r\n            });\r\n        });\r\n\r\n        hide.addEventListener('click', () => {\r\n            if (!state.isMute) makeSound(state.lang.toLowerCase());\r\n            state.content = \"\";\r\n            state.isHide = true;\r\n            document.querySelector(\".keyboard\").classList.toggle(\"keyboard--hidden\");\r\n        })\r\n\r\n    }\r\n    initkeys();\r\n\r\n    keyboardInput.addEventListener('click', () => {\r\n        state.currentCursor = keyboardInput.value.length;\r\n        if (state.isHide) {\r\n            state.isHide = false;\r\n            document.querySelector('.keyboard').classList.remove(\"keyboard--hidden\");\r\n        }\r\n        setFocus();\r\n    });\r\n\r\n    keyboardInput.addEventListener('keydown', (e) => {\r\n        const pressed = document.querySelector('.key__pressed');\r\n        if (pressed) pressed.classList.remove('key__pressed');\r\n        const item = setColor(e.key, e.code)\r\n        if (item !== undefined) item.classList.add('key__pressed');\r\n        if (item !== undefined && (item.classList.contains('backspace') || item.classList.contains('keyboard__key--arrow') || item.classList.contains('enter'))) {\r\n            e.preventDefault();\r\n            setFocus();\r\n        }\r\n        if (item !== undefined && item.classList.contains('keyboard__key--elem')) {\r\n            e.preventDefault();\r\n            const currentArr = keyboardInput.value.split('');\r\n            currentArr.splice(state.currentCursor, 0, e.key);\r\n            state.content = currentArr.join('');\r\n            document.querySelector('#outlined-basic').value = state.content;\r\n            setSearchTerm(keyboardInput.value);\r\n            setFocus();\r\n        }\r\n        setFocus();\r\n    })\r\n\r\n\r\n    const clickEnter = () => {\r\n        const keyboardInput = document.querySelector('#outlined-basic');\r\n        const currentArr = keyboardInput.value.split('');\r\n        currentArr.splice(state.currentCursor, 0, \"\\n\");\r\n        state.content += currentArr.join('');\r\n        keyboardInput.value = currentArr.join('');\r\n        setSearchTerm(keyboardInput.value);\r\n        state.currentCursor += 1;\r\n        setFocus();\r\n    }\r\n\r\n    const clickBackSpace = () => {\r\n        const keyboardInput = document.querySelector('#outlined-basic');\r\n        const currentArr = keyboardInput.value.split('');\r\n        currentArr.splice(state.currentCursor - 1, 1);\r\n        state.content = currentArr.join('');\r\n        keyboardInput.value = state.content;\r\n        setSearchTerm(keyboardInput.value);\r\n        state.currentCursor -= 1;\r\n        setFocus();\r\n        return;\r\n    }\r\n\r\n    const clickCaps = (el) => {\r\n        state.isCaps = !state.isCaps;\r\n        toggleCapsLock(state.isCaps)\r\n        el.classList.toggle(\"keyboard__key--active\");\r\n        setFocus();\r\n    }\r\n\r\n    \r\n    const setColor = (elem, elCode) => {\r\n        return Array.from(keyElements).find((el, idx) => {\r\n            if (elem === 'Backspace') {\r\n                if (el.classList.contains('backspace')) {\r\n                    if (keyboardInput.value.length === 0) return;\r\n                    clickBackSpace()\r\n                }\r\n                return el.classList.contains('backspace');\r\n            } else if (elem === 'CapsLock') {\r\n                if (el.classList.contains('caps')) {\r\n                    clickCaps(el);\r\n                    if (state.isShift) getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                }\r\n                return el.classList.contains('caps');\r\n            } else if (elem === \" \") {\r\n                if (el.classList.contains('space')) {\r\n                    state.content += \" \";\r\n                    keyboardInput.value += \" \";\r\n                    state.currentCursor += 1;\r\n                    setFocus();\r\n                }\r\n                return el.classList.contains('space');\r\n            } else if (elem === \"Enter\") {\r\n                if (el.classList.contains('enter')) clickEnter();\r\n                return el.classList.contains('enter');\r\n            } else if (elem === \"Shift\") {\r\n                if (el.classList.contains('shift')) {\r\n                    el.classList.toggle(\"keyboard__key--active\");\r\n                    if (!state.isShift && state.isCaps) {\r\n                        state.isShift = true;\r\n                        renderKeyBoard(state.lang, state.isCaps, state.isMute, state.isShift);\r\n                        init()\r\n                        initkeys()\r\n                        setFocus();\r\n                        getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                        return;\r\n                    } else if (state.isShift) {\r\n                        state.isShift = false;\r\n                        renderKeyBoard(state.lang, state.isCaps, state.isMute, state.isShift);\r\n                        init()\r\n                        initkeys()\r\n                        setFocus();\r\n                        return;\r\n                    } else {\r\n                        state.isShift = true;\r\n                        getShiftValue(state.lang, state.isCaps, state.isShift);\r\n                        setFocus();\r\n                        return;\r\n                    }\r\n                }\r\n                return el.classList.contains('shift');\r\n            } else if (elem === 'ArrowLeft') {\r\n                if (el.classList.contains('left-arrow')) {\r\n                    if (state.currentCursor !== 0) {\r\n                        state.currentCursor -= 1;\r\n                    }\r\n                    setFocus();\r\n                }\r\n                return el.classList.contains('left-arrow');\r\n            } else if (elem === 'ArrowRight') {\r\n                if (el.classList.contains('right-arrow')) {\r\n                    if (state.currentCursor <= keyboardInput.value.length - 1) {\r\n                        state.currentCursor += 1;\r\n                    }\r\n                    setFocus();\r\n                }\r\n                return el.classList.contains('right-arrow');\r\n            } else {\r\n\r\n                if (el.innerHTML.toLowerCase() === elem.toLowerCase() || (`key${el.innerHTML.toLowerCase()}` === elCode.toLowerCase() || `key${elem.toLowerCase()}` === elCode.toLowerCase())) {\r\n                    if (state.currentCursor + 1 === keyboardInput.value.length + 1) {\r\n                        state.currentCursor += 1;\r\n                        setFocus()\r\n                    }\r\n                }\r\n                return el.innerHTML.toLowerCase() === elem.toLowerCase();\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default listen;\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\view\\renderKeyboardKeys.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\toggleCaps.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\audio.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Keyboard\\model\\shift.js",["161"],"const specialsSimbolsEN = {\r\n    '0': ')',\r\n    '1': '!',\r\n    '2': '@',\r\n    '3': '#',\r\n    '4': '$',\r\n    '5': '%',\r\n    '6': '^',\r\n    '7': '&',\r\n    '8': '*',\r\n    '9': '(',\r\n    '-': '_',\r\n    '=': '+',\r\n    '[': '{',\r\n    ']': '}',\r\n    ';': ':',\r\n    '\\'': '\"',\r\n    '\\\\': '|',\r\n    ',': '<',\r\n    '.': '>',\r\n    '/': '?',\r\n}\r\n\r\nconst specialsSimbolsRU = {\r\n    '0': ')',\r\n    '1': '!',\r\n    '2': '\"',\r\n    '3': '№',\r\n    '4': ';',\r\n    '5': '%',\r\n    '6': ':',\r\n    '7': '?',\r\n    '8': '*',\r\n    '9': '(',\r\n    '-': '_',\r\n    '=': '+',\r\n    '[': '{',\r\n    ']': '}',\r\n    '\\\\': '/',\r\n    '.': ',',\r\n}\r\n\r\nconst getShiftValue = (lang, isCaps, isShift) => {\r\n    const symbolArr = lang  === 'EN' ?  specialsSimbolsEN : specialsSimbolsRU;\r\n    const keyboard__key  = document.querySelectorAll('.keyboard__key');\r\n    const shiftArr =  Array.from(keyboard__key).map(key => {\r\n        if(key.innerHTML.length > 3) return;\r\n        if(symbolArr[key.innerHTML.toString()] === '<') return key.innerHTML = \"<\";\r\n        if(symbolArr[key.innerHTML.toString()] === '>') return key.innerHTML = \">\";\r\n\r\n        if(symbolArr[key.innerHTML.toString()] !== undefined) return key.innerHTML = symbolArr[key.innerHTML.toString()];\r\n        if(key.classList.contains('lang')) return key.innerText.toString().toUpperCase();\r\n       return key.innerText =  isCaps && isShift ? key.innerText.toString().toLowerCase() : key.innerText.toString().toUpperCase();\r\n\r\n    })\r\n    return shiftArr;\r\n}\r\n\r\nexport default getShiftValue;","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Preloader\\index.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":130,"column":12,"nodeType":"168","endLine":130,"endColumn":14,"suggestions":"169"},{"ruleId":"166","severity":1,"message":"170","line":49,"column":8,"nodeType":"168","endLine":49,"endColumn":10,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"172","line":39,"column":6,"nodeType":"168","endLine":39,"endColumn":8,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":13,"column":22,"nodeType":"176","messageId":"177","endLine":13,"endColumn":35},{"ruleId":"174","severity":1,"message":"178","line":30,"column":9,"nodeType":"176","messageId":"177","endLine":30,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":218,"column":59,"nodeType":"181","messageId":"182","endLine":218,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":249,"column":25,"nodeType":"181","messageId":"182","endLine":249,"endColumn":32},{"ruleId":"179","severity":1,"message":"180","line":256,"column":25,"nodeType":"181","messageId":"182","endLine":256,"endColumn":32},{"ruleId":"179","severity":1,"message":"180","line":261,"column":25,"nodeType":"181","messageId":"182","endLine":261,"endColumn":32},{"ruleId":"179","severity":1,"message":"183","line":47,"column":38,"nodeType":"181","messageId":"182","endLine":47,"endColumn":45},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'item.countryInfo.lat', 'item.countryInfo.long', and 'map'. Either include them or remove the dependency array.","ArrayExpression",["186"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["188"],"no-unused-vars","'setParameters' is assigned a value but never used.","Identifier","unusedVar","'shift' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a return value from arrow function.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [item.countryInfo.lat, item.countryInfo.long, map]",{"range":"195","text":"196"},"Update the dependencies array to be: [map]",{"range":"197","text":"198"},"Update the dependencies array to be: [searchTerm]",{"range":"199","text":"200"},[4326,4328],"[item.countryInfo.lat, item.countryInfo.long, map]",[1688,1690],"[map]",[1048,1050],"[searchTerm]"]