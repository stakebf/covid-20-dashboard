[{"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\index.js":"1","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\store\\index.js":"2","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\App\\index.js":"3","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx":"4","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Switcher.jsx":"5","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx":"6","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx":"7","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\reducers\\index.js":"8","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\index.js":"9","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getStatistics.js":"10","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js":"11","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx":"12","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx":"13","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx":"14","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx":"15","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js":"16","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\services\\WorldometrsService.js":"17","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\countriesCoordinates.js":"18","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx":"19","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tabs\\index.js":"20","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\tabsNames.js":"21","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js":"22","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js":"23","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\chartHelpers.js":"24","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\chartConfig.js":"25","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Chart\\index.js":"26","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Header\\index.js":"27","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Footer\\index.js":"28","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js":"29","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js":"30"},{"size":295,"mtime":1608496611671,"results":"31","hashOfConfig":"32"},{"size":604,"mtime":1608313503754,"results":"33","hashOfConfig":"32"},{"size":1081,"mtime":1608746315260,"results":"34","hashOfConfig":"32"},{"size":1577,"mtime":1608496611660,"results":"35","hashOfConfig":"32"},{"size":1114,"mtime":1608496611668,"results":"36","hashOfConfig":"32"},{"size":5334,"mtime":1608731625765,"results":"37","hashOfConfig":"32"},{"size":4457,"mtime":1608731625762,"results":"38","hashOfConfig":"32"},{"size":1744,"mtime":1608746315268,"results":"39","hashOfConfig":"32"},{"size":3369,"mtime":1608733583639,"results":"40","hashOfConfig":"32"},{"size":136,"mtime":1608496611670,"results":"41","hashOfConfig":"32"},{"size":672,"mtime":1608733583639,"results":"42","hashOfConfig":"32"},{"size":1742,"mtime":1608731625765,"results":"43","hashOfConfig":"32"},{"size":2686,"mtime":1608496611666,"results":"44","hashOfConfig":"32"},{"size":1992,"mtime":1608733583636,"results":"45","hashOfConfig":"32"},{"size":1156,"mtime":1608758295794,"results":"46","hashOfConfig":"32"},{"size":238,"mtime":1608313503747,"results":"47","hashOfConfig":"32"},{"size":1513,"mtime":1608733583641,"results":"48","hashOfConfig":"32"},{"size":26503,"mtime":1608476278313,"results":"49","hashOfConfig":"32"},{"size":2422,"mtime":1608496611667,"results":"50","hashOfConfig":"32"},{"size":1781,"mtime":1608634702863,"results":"51","hashOfConfig":"32"},{"size":176,"mtime":1608634702864,"results":"52","hashOfConfig":"32"},{"size":1315,"mtime":1608733583637,"results":"53","hashOfConfig":"32"},{"size":1820,"mtime":1608634702852,"results":"54","hashOfConfig":"32"},{"size":4520,"mtime":1608746315267,"results":"55","hashOfConfig":"32"},{"size":1431,"mtime":1608758295795,"results":"56","hashOfConfig":"32"},{"size":1216,"mtime":1608749345881,"results":"57","hashOfConfig":"32"},{"size":238,"mtime":1608746315266,"results":"58","hashOfConfig":"32"},{"size":760,"mtime":1608746315265,"results":"59","hashOfConfig":"32"},{"size":1952,"mtime":1608746315262,"results":"60","hashOfConfig":"32"},{"size":661,"mtime":1608746315263,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ldy8hi",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\index.js",[],["130","131"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\store\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\App\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Switcher.jsx",[],["132","133"],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx",["134"],"import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Popup, CircleMarker, useMap } from 'react-leaflet'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Legend from './Legend';\r\nimport MapProvider from './MapProvider';\r\nimport { getStatistics } from '../../../helpers/getStatistics';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './map.scss';\r\n\r\nlet index = 0;\r\nconst DEFAULT_LOCATION = [53.90033950661763, 27.562463259670654];\r\nconst ZOOM = 1.5;\r\n\r\nconst useStyles = makeStyles({\r\n    mapContainer: {\r\n        backgroundColor: 'beige',\r\n        margin: '0 auto',\r\n        marginBottom: '50px',\r\n        height: '80vh',\r\n        width: '100%',\r\n        gridColumn: '2'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nconst getColor = num => {\r\n    return num > 1000000\r\n        ? \"#BD0026\"\r\n        : num > 500000\r\n            ? \"#E31A1C\"\r\n            : num > 100000\r\n                ? \"#FC4E2A\"\r\n                : num > 50000\r\n                    ? \"#FD8D3C\"\r\n                    : num > 10000\r\n                        ? \"#FEB24C\"\r\n                        : num > 1000\r\n                            ? \"#dfdc15\"\r\n                            : \"#4ddb0b\";\r\n}\r\n\r\nfunction Map({ stat, cases, pickedCountry }) {\r\n    const coords = Object.keys(pickedCountry).length ? [pickedCountry.countryInfo.lat, pickedCountry.countryInfo.long] : DEFAULT_LOCATION;\r\n    const [isNewLocation, setIsNewLocation] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsNewLocation(true);\r\n    }, [pickedCountry]);\r\n\r\n    const classes = useStyles();\r\n    const fillOptions = (color) => {\r\n        return {\r\n            fillColor: color,\r\n            color: color,\r\n            fillOpacity: 0.5\r\n        }\r\n    };\r\n\r\n    function getStaticticsValue(item) {\r\n        const { category, timePeriod } = stat;\r\n        const statType = category === 'confirmed' ? 'cases' : category.toString();\r\n        let staticticValue = timePeriod.includes('today') ? item[`today${statType.charAt(0).toUpperCase() + statType.slice(1)}`] : item[statType];\r\n\r\n        if (timePeriod.includes('100')) {\r\n            staticticValue = getStatistics(staticticValue, item.population);\r\n        }\r\n\r\n        return staticticValue;\r\n    };\r\n\r\n    function renderProvinceMarker(item) {\r\n        const { category, timePeriod } = stat;\r\n        const center = [item.coordinates.latitude, item.coordinates.longitude];\r\n        let staticticValue = getStaticticsValue(item);\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={1 * 5}\r\n            key={`${item.coordinates.latitude}_${++index}`}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{item.stats[category]}\r\n                <br />\r\n                {pickedCountry.country}, {item.province}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function renderCountryMarker(item, stat, idx, radius) {\r\n        const { category, timePeriod } = stat;\r\n        let staticticValue = getStaticticsValue(item);\r\n        const center = [item.countryInfo.lat, item.countryInfo.long];\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={radius ? radius : 1 * 5}\r\n            key={++index}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{staticticValue}\r\n                <br />\r\n                {item.country}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function FlyToLocation({ item, stat }) {\r\n        const map = useMap();\r\n        useEffect(() => {\r\n            map.flyTo([item.countryInfo.lat, item.countryInfo.long], 5);\r\n            setIsNewLocation(false);\r\n        }, []);\r\n\r\n        return renderCountryMarker(item, stat, null, 10);\r\n    };\r\n\r\n    return (\r\n        < MapContainer className={classes.mapContainer} center={coords} minZoom={1} zoom={ZOOM} scrollWheelZoom={true}>\r\n            {Object.keys(pickedCountry).length && isNewLocation ? <FlyToLocation position={coords} item={pickedCountry} stat={stat} /> : null}\r\n            <MapProvider />\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n\r\n            {cases.map((item, idx) => {\r\n                if (item.provinces !== null) {\r\n                    return item.provinces.map((provence) => renderProvinceMarker(provence))\r\n                }\r\n                return renderCountryMarker(item, stat, idx)\r\n            })}\r\n            <Legend />\r\n        </MapContainer >\r\n    )\r\n}\r\n\r\nexport default React.memo(Map);\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\reducers\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getStatistics.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx",["135"],"import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport classes from './MapContainer.module.scss';\r\n\r\nconst Legend = () => {\r\n    const map = useMap();\r\n    console.log(map);\r\n\r\n    useEffect(() => {\r\n        const getColor = num => {\r\n            console.log(num > 10000, num, '800026')\r\n            return num > 1000000\r\n                ? \"#BD0026\"\r\n                : num > 500000\r\n                    ? \"#E31A1C\"\r\n                    : num > 100000\r\n                        ? \"#FC4E2A\"\r\n                        : num > 50000\r\n                            ? \"#FD8D3C\"\r\n                            : num > 10000\r\n                                ? \"#FEB24C\"\r\n                                : num > 1000\r\n                                    ? \"#dfdc15\"\r\n                                    : \"#4ddb0b\";\r\n        }\r\n\r\n        const legend = L.control({ position: \"bottomright\" });\r\n\r\n        legend.onAdd = () => {\r\n            const div = L.DomUtil.create(\"div\", \"info legend\");\r\n            const grades = [0, 1000, 10000, 50000, 100000, 500000, 1000000];\r\n            let labels = [];\r\n            let from;\r\n            let to;\r\n\r\n            for (let i = 0; i < grades.length; i++) {\r\n                from = grades[i];\r\n                to = grades[i + 1];\r\n                labels.push(\r\n                    `<div class=${classes.label__item}><span style=\"background:${getColor(from + 1)}\" class=${classes.label__color}></span><span> ${to ? to : +grades[i]}</span></div>`\r\n                );\r\n            }\r\n            div.innerHTML = labels.join(\"<br>\");\r\n            return div;\r\n        };\r\n\r\n        legend.addTo(map);\r\n    }, []);\r\n    return null;\r\n};\r\n\r\nexport default Legend;\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx",["136"],"import React from 'react';\r\nimport { LayersControl, TileLayer } from 'react-leaflet'\r\nimport MinimapControl from './MiniMap'\r\n\r\nconst MapProvider = () => {\r\n\r\n    return (\r\n        <LayersControl position=\"topright\">\r\n            <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {/* <MinimapControl position=\"topright\" /> */}\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenTopoMap\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r\n                    url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmoothDark\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stamen.Toner\">\r\n                <TileLayer\r\n                    attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    subdomains='abcd'\r\n                    minZoom='0'\r\n                    maxZoom='20'\r\n                    url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n        </LayersControl>\r\n    )\r\n}\r\n\r\n\r\nexport default MapProvider;","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx",["137"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchInput({ cases, setNewCases }) {\r\n  const classes = useStyles();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const countries = cases;\r\n\r\n  const handleChange = event => {\r\n    setSearchTerm(event.target.value.toLowerCase());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = countries.filter(country =>\r\n      country.country.toLowerCase().includes(searchTerm)\r\n    );\r\n    setNewCases(results);\r\n  }, [countries, searchTerm, setNewCases]);\r\n\r\n  return (\r\n    <form className={classes.formContainer} noValidate autoComplete=\"off\">\r\n      <TextField id=\"outlined-basic\" label=\"Enter city\" variant=\"outlined\" \r\n      onChange={(e) => {\r\n        handleChange(e)\r\n      }}\r\n        onKeyPress={(e) => {\r\n          if (e.code === 'Enter') e.preventDefault();\r\n        }\r\n        } />\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\services\\WorldometrsService.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\countriesCoordinates.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx",["138","139"],"import React, { useState, useCallback, useMemo } from 'react';\r\nimport { MapContainer, TileLayer, useMapEvent, Rectangle, useMapEvents, useMap } from 'react-leaflet'\r\n\r\nconst POSITION_CLASSES = {\r\n    bottomleft: 'leaflet-bottom leaflet-left',\r\n    bottomright: 'leaflet-bottom leaflet-right',\r\n    topleft: 'leaflet-top leaflet-left',\r\n    topright: 'leaflet-top leaflet-right',\r\n  }\r\n  \r\n  const BOUNDS_STYLE = { weight: 1 }\r\n  \r\n  function MinimapBounds({ parentMap, zoom }) {\r\n    const minimap = useMap()\r\n  \r\n    // Clicking a point on the minimap sets the parent's map center\r\n    const onClick = useCallback(\r\n      (e) => {\r\n        parentMap.setView(e.latlng, parentMap.getZoom())\r\n      },\r\n      [parentMap],\r\n    )\r\n    useMapEvent('click', onClick)\r\n  \r\n    // Keep track of bounds in state to trigger renders\r\n    const [bounds, setBounds] = useState(parentMap.getBounds())\r\n    const onChange = useCallback(() => {\r\n      setBounds(parentMap.getBounds())\r\n      // Update the minimap's view to match the parent map's center and zoom\r\n      minimap.setView(parentMap.getCenter(), zoom)\r\n    }, [minimap, parentMap, zoom])\r\n  \r\n    // Listen to events on the parent map\r\n    const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [])\r\n    useMapEvents({ instance: parentMap }, handlers)\r\n  \r\n    return <Rectangle bounds={bounds} pathOptions={BOUNDS_STYLE} />\r\n  }\r\n  \r\n  function MinimapControl({ position, zoom }) {\r\n    const parentMap = useMap()\r\n    const mapZoom = zoom || 0\r\n  \r\n    // Memoize the minimap so it's not affected by position changes\r\n    const minimap = useMemo(\r\n      () => (\r\n        <MapContainer\r\n          style={{ height: 80, width: 80 }}\r\n          center={parentMap.getCenter()}\r\n          zoom={mapZoom}\r\n          dragging={false}\r\n          doubleClickZoom={false}\r\n          scrollWheelZoom={false}\r\n          attributionControl={false}\r\n          zoomControl={false}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\r\n        </MapContainer>\r\n      ),\r\n      [],\r\n    )\r\n  \r\n    const positionClass =\r\n      (position && POSITION_CLASSES[position]) || POSITION_CLASSES.topright\r\n    return (\r\n      <div className={positionClass}>\r\n        <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\r\n      </div>\r\n    )\r\n  }\r\n  export default MinimapControl;","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tabs\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\tabsNames.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\helpers\\chartHelpers.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\models\\chartConfig.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Chart\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Header\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\Footer\\index.js",[],"C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js",["140"],"import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\n\r\nimport GlobalCases from '../Tables/GlobalCases/GlobalCases';\r\nimport CasesContainer from '../Tables/CasesByCity/CasesContainer';\r\nimport Map from '../Tables/Map/MapContainer';\r\nimport GroupedTabs from '../Tabs';\r\nimport AllKindsOfCases from '../Tables/AllKindsOfCases';\r\nimport Charts from '../Chart';\r\n\r\nimport classes from './AppWrapper.module.scss';\r\n\r\nconst AppWrapper = ({ byAllCases, byCountries, activeCountry }) => {\r\n  const [parameters, setParameters] = useState({\r\n    globalCases: 'cases',\r\n    casesSelected: 'Cases by country'\r\n  });\r\n\r\n  const [statisticField, setStatisticField] = useState({\r\n    category: 'confirmed',\r\n    timePeriod: 'total'\r\n  });\r\n\r\n  const commonCaregories = ['confirmed', 'deaths', 'recovered'];\r\n  const timeCategories = ['total', 'today', 'total/100', 'today/100'];\r\n\r\n  return (\r\n    <main className={classes.main__container}>\r\n      <AllKindsOfCases />\r\n      <Charts />\r\n      <GlobalCases casesType={parameters.globalCases} />\r\n      <CasesContainer title={parameters.casesSelected} countries={byCountries} />\r\n      <Container className='map__container'>\r\n        <GroupedTabs type={'category'} country={activeCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={commonCaregories} />\r\n        <GroupedTabs type ={'timePeriod'} country={activeCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={timeCategories} />\r\n        <Map stat={statisticField} byAllCases={byAllCases} cases={byCountries} pickedCountry={activeCountry} />\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    byAllCases: state.byAllCases,\r\n    byCountries: state.byCountries,\r\n    activeCountry: state.activeCountry\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppWrapper);\r\n","C:\\Users\\stakebf\\Desktop\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":131,"column":12,"nodeType":"149","endLine":131,"endColumn":14,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":49,"column":8,"nodeType":"149","endLine":49,"endColumn":10,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":3,"column":8,"nodeType":"155","messageId":"156","endLine":3,"endColumn":22},{"ruleId":"147","severity":1,"message":"157","line":35,"column":6,"nodeType":"149","endLine":35,"endColumn":8,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"159","line":34,"column":74,"nodeType":"149","endLine":34,"endColumn":76,"suggestions":"160"},{"ruleId":"147","severity":1,"message":"161","line":60,"column":7,"nodeType":"149","endLine":60,"endColumn":9,"suggestions":"162"},{"ruleId":"153","severity":1,"message":"163","line":15,"column":22,"nodeType":"155","messageId":"156","endLine":15,"endColumn":35},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'item.countryInfo.lat', 'item.countryInfo.long', and 'map'. Either include them or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["167"],"no-unused-vars","'MinimapControl' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["168"],"React Hook useMemo has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["169"],"React Hook useMemo has missing dependencies: 'mapZoom' and 'parentMap'. Either include them or remove the dependency array.",["170"],"'setParameters' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [item.countryInfo.lat, item.countryInfo.long, map]",{"range":"181","text":"182"},"Update the dependencies array to be: [map]",{"range":"183","text":"184"},"Update the dependencies array to be: [searchTerm]",{"range":"185","text":"186"},"Update the dependencies array to be: [onChange]",{"range":"187","text":"188"},"Update the dependencies array to be: [mapZoom, parentMap]",{"range":"189","text":"190"},[4355,4357],"[item.countryInfo.lat, item.countryInfo.long, map]",[1688,1690],"[map]",[967,969],"[searchTerm]",[1258,1260],"[onChange]",[2121,2123],"[mapZoom, parentMap]"]