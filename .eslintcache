[{"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js":"1","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js":"2","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js":"3","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js":"4","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js":"5","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js":"6","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Header\\index.js":"7","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Footer\\index.js":"8","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js":"9","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js":"10","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js":"11","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js":"12","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js":"13","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx":"14","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx":"15","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx":"16","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tabs\\index.js":"17","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Chart\\index.js":"18","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js":"19","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js":"20","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\tabsNames.js":"21","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\chartConfig.js":"22","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\chartHelpers.js":"23","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx":"24","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx":"25","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js":"26","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx":"27","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx":"28"},{"size":295,"mtime":1608735608182,"results":"29","hashOfConfig":"30"},{"size":604,"mtime":1608062054171,"results":"31","hashOfConfig":"30"},{"size":1087,"mtime":1608757680562,"results":"32","hashOfConfig":"30"},{"size":1744,"mtime":1608746223488,"results":"33","hashOfConfig":"30"},{"size":3369,"mtime":1608735670212,"results":"34","hashOfConfig":"30"},{"size":2165,"mtime":1608755813118,"results":"35","hashOfConfig":"30"},{"size":238,"mtime":1608746223461,"results":"36","hashOfConfig":"30"},{"size":760,"mtime":1608746223459,"results":"37","hashOfConfig":"30"},{"size":659,"mtime":1608751962251,"results":"38","hashOfConfig":"30"},{"size":1513,"mtime":1608735670215,"results":"39","hashOfConfig":"30"},{"size":26503,"mtime":1608735608185,"results":"40","hashOfConfig":"30"},{"size":672,"mtime":1608735670212,"results":"41","hashOfConfig":"30"},{"size":238,"mtime":1608062054169,"results":"42","hashOfConfig":"30"},{"size":5444,"mtime":1608755397409,"results":"43","hashOfConfig":"30"},{"size":1492,"mtime":1608753701277,"results":"44","hashOfConfig":"30"},{"size":4557,"mtime":1608757438649,"results":"45","hashOfConfig":"30"},{"size":1570,"mtime":1608755266072,"results":"46","hashOfConfig":"30"},{"size":1216,"mtime":1608749776676,"results":"47","hashOfConfig":"30"},{"size":1985,"mtime":1608750422741,"results":"48","hashOfConfig":"30"},{"size":1315,"mtime":1608735670211,"results":"49","hashOfConfig":"30"},{"size":176,"mtime":1608735608185,"results":"50","hashOfConfig":"30"},{"size":1431,"mtime":1608749776678,"results":"51","hashOfConfig":"30"},{"size":4520,"mtime":1608746764843,"results":"52","hashOfConfig":"30"},{"size":1265,"mtime":1608754063976,"results":"53","hashOfConfig":"30"},{"size":2415,"mtime":1608746657526,"results":"54","hashOfConfig":"30"},{"size":136,"mtime":1608735608181,"results":"55","hashOfConfig":"30"},{"size":2408,"mtime":1608754131435,"results":"56","hashOfConfig":"30"},{"size":1742,"mtime":1608735608172,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d99sxb",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"87"},"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js",["117","118"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js",["119"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Header\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Footer\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx",["120"],"import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Popup, CircleMarker, useMap } from 'react-leaflet'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Legend from './Legend';\r\nimport MapProvider from './MapProvider';\r\nimport { getStatistics } from '../../../helpers/getStatistics';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './map.scss';\r\n\r\nlet index = 0;\r\nconst DEFAULT_LOCATION = [53.90033950661763, 27.562463259670654];\r\nconst ZOOM = 1.5;\r\n\r\nconst useStyles = makeStyles({\r\n    mapContainer: {\r\n        backgroundColor: '#2c2c2c',\r\n        margin: '0 auto',\r\n        height: '80vh',\r\n        width: '100%',\r\n        gridColumn: '2'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nconst getColor = num => {\r\n    return num > 1000000\r\n        ? \"#BD0026\"\r\n        : num > 500000\r\n            ? \"#E31A1C\"\r\n            : num > 100000\r\n                ? \"#FC4E2A\"\r\n                : num > 50000\r\n                    ? \"#FD8D3C\"\r\n                    : num > 10000\r\n                        ? \"#FEB24C\"\r\n                        : num > 1000\r\n                            ? \"#dfdc15\"\r\n                            : \"#4ddb0b\";\r\n}\r\n\r\nfunction Map({ stat, cases, pickedCountry }) {\r\n    const coords = Object.keys(pickedCountry).length ? [pickedCountry.countryInfo.lat, pickedCountry.countryInfo.long] : DEFAULT_LOCATION;\r\n    const [isNewLocation, setIsNewLocation] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsNewLocation(true);\r\n    }, [pickedCountry]);\r\n\r\n    const classes = useStyles();\r\n    const fillOptions = (color) => {\r\n        return {\r\n            fillColor: color,\r\n            color: color,\r\n            fillOpacity: 0.5\r\n        }\r\n    };\r\n\r\n    function getStaticticsValue(item) {\r\n        const { category, timePeriod } = stat;\r\n        const statType = category === 'confirmed' ? 'cases' : category.toString();\r\n        let staticticValue = timePeriod.includes('today') ? item[`today${statType.charAt(0).toUpperCase() + statType.slice(1)}`] : item[statType];\r\n\r\n        if (timePeriod.includes('100')) {\r\n            staticticValue = getStatistics(staticticValue, item.population);\r\n        }\r\n\r\n        return staticticValue;\r\n    };\r\n\r\n    function renderProvinceMarker(item) {\r\n        const { category, timePeriod } = stat;\r\n        const center = [item.coordinates.latitude, item.coordinates.longitude];\r\n        let staticticValue = getStaticticsValue(item);\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={1 * 5}\r\n            key={`${item.coordinates.latitude}_${++index}`}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{item.stats[category]}\r\n                <br />\r\n                {pickedCountry.country}, {item.province}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function renderCountryMarker(item, stat, idx, radius) {\r\n        const { category, timePeriod } = stat;\r\n        let staticticValue = getStaticticsValue(item);\r\n        const center = [item.countryInfo.lat, item.countryInfo.long];\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={radius ? radius : 1 * 5}\r\n            key={++index}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{staticticValue}\r\n                <br />\r\n                {item.country}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function FlyToLocation({ item, stat }) {\r\n        const map = useMap();\r\n        useEffect(() => {\r\n            map.flyTo([item.countryInfo.lat, item.countryInfo.long], 5);\r\n            setIsNewLocation(false);\r\n        }, []);\r\n\r\n        return renderCountryMarker(item, stat, null, 10);\r\n    };\r\n\r\n    return (\r\n        < MapContainer className={classes.mapContainer} center={coords} minZoom={1} zoom={ZOOM} scrollWheelZoom={true}>\r\n            {Object.keys(pickedCountry).length && isNewLocation ? <FlyToLocation position={coords} item={pickedCountry} stat={stat} /> : null}\r\n            <MapProvider />\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n                url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n            />\r\n            {cases.map((item, idx) => {\r\n                if (item.provinces !== null) {\r\n                    return item.provinces.map((provence) => renderProvinceMarker(provence))\r\n                }\r\n                return renderCountryMarker(item, stat, idx)\r\n            })}\r\n            <Legend />\r\n        </MapContainer >\r\n    )\r\n}\r\n\r\nexport default React.memo(Map);\r\n",["121","122"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tabs\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Chart\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\tabsNames.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\chartConfig.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\chartHelpers.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx",["123"],"import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport classes from './MapContainer.module.scss';\r\n\r\nconst Legend = () => {\r\n    const map = useMap();\r\n    console.log(map);\r\n\r\n    useEffect(() => {\r\n        const getColor = num => {\r\n            console.log(num > 10000, num, '800026')\r\n            return num > 1000000\r\n                ? \"#BD0026\"\r\n                : num > 500000\r\n                    ? \"#E31A1C\"\r\n                    : num > 100000\r\n                        ? \"#FC4E2A\"\r\n                        : num > 50000\r\n                            ? \"#FD8D3C\"\r\n                            : num > 10000\r\n                                ? \"#FEB24C\"\r\n                                : num > 1000\r\n                                    ? \"#dfdc15\"\r\n                                    : \"#4ddb0b\";\r\n        }\r\n\r\n        const legend = L.control({ position: \"bottomright\" });\r\n\r\n        legend.onAdd = () => {\r\n            const div = L.DomUtil.create(\"div\", \"info legend\");\r\n            const grades = [0, 1000, 10000, 50000, 100000, 500000, 1000000];\r\n            let labels = [];\r\n            let from;\r\n            let to;\r\n\r\n            for (let i = 0; i < grades.length; i++) {\r\n                from = grades[i];\r\n                to = grades[i + 1];\r\n                labels.push(\r\n                    `<div class=${classes.label__item}><span style=\"background:${getColor(from + 1)}\" class=${classes.label__color}></span><span> ${to ? to : +grades[i]}</span></div>`\r\n                );\r\n            }\r\n            div.innerHTML = labels.join(\"<br>\");\r\n            return div;\r\n        };\r\n\r\n        legend.addTo(map);\r\n    }, []);\r\n    return null;\r\n};\r\n\r\nexport default Legend;\r\n",{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":13,"column":22,"nodeType":"126","messageId":"127","endLine":13,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":130,"column":12,"nodeType":"132","endLine":130,"endColumn":14,"suggestions":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"130","severity":1,"message":"138","line":49,"column":8,"nodeType":"132","endLine":49,"endColumn":10,"suggestions":"139"},"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'AppWrapper' is defined but never used.","'setParameters' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'item.countryInfo.lat', 'item.countryInfo.long', and 'map'. Either include them or remove the dependency array.","ArrayExpression",["140"],"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["143"],{"desc":"144","fix":"145"},"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [item.countryInfo.lat, item.countryInfo.long, map]",{"range":"148","text":"149"},"Update the dependencies array to be: [map]",{"range":"150","text":"151"},[4326,4328],"[item.countryInfo.lat, item.countryInfo.long, map]",[1688,1690],"[map]"]