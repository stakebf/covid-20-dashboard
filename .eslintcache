[{"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js":"1","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js":"2","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js":"3","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js":"4","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js":"5","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js":"6","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Header\\index.js":"7","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Footer\\index.js":"8","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js":"9","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js":"10","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js":"11","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js":"12","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js":"13","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx":"14","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx":"15","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx":"16","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tabs\\index.js":"17","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Chart\\index.js":"18","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js":"19","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js":"20","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\tabsNames.js":"21","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\chartConfig.js":"22","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\chartHelpers.js":"23","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx":"24","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx":"25","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js":"26","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx":"27","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx":"28","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx":"29"},{"size":295,"mtime":1608735608182,"results":"30","hashOfConfig":"31"},{"size":604,"mtime":1608062054171,"results":"32","hashOfConfig":"31"},{"size":1079,"mtime":1608746561091,"results":"33","hashOfConfig":"31"},{"size":1744,"mtime":1608746223488,"results":"34","hashOfConfig":"31"},{"size":3369,"mtime":1608735670212,"results":"35","hashOfConfig":"31"},{"size":2089,"mtime":1608749415102,"results":"36","hashOfConfig":"31"},{"size":238,"mtime":1608746223461,"results":"37","hashOfConfig":"31"},{"size":760,"mtime":1608746223459,"results":"38","hashOfConfig":"31"},{"size":661,"mtime":1608746223458,"results":"39","hashOfConfig":"31"},{"size":1513,"mtime":1608735670215,"results":"40","hashOfConfig":"31"},{"size":26503,"mtime":1608735608185,"results":"41","hashOfConfig":"31"},{"size":672,"mtime":1608735670212,"results":"42","hashOfConfig":"31"},{"size":238,"mtime":1608062054169,"results":"43","hashOfConfig":"31"},{"size":5334,"mtime":1608735608173,"results":"44","hashOfConfig":"31"},{"size":1577,"mtime":1608735608170,"results":"45","hashOfConfig":"31"},{"size":4568,"mtime":1608740820958,"results":"46","hashOfConfig":"31"},{"size":1962,"mtime":1608749638763,"results":"47","hashOfConfig":"31"},{"size":1216,"mtime":1608748247528,"results":"48","hashOfConfig":"31"},{"size":1985,"mtime":1608749515905,"results":"49","hashOfConfig":"31"},{"size":1315,"mtime":1608735670211,"results":"50","hashOfConfig":"31"},{"size":176,"mtime":1608735608185,"results":"51","hashOfConfig":"31"},{"size":1430,"mtime":1608748247529,"results":"52","hashOfConfig":"31"},{"size":4520,"mtime":1608746764843,"results":"53","hashOfConfig":"31"},{"size":1152,"mtime":1608745005310,"results":"54","hashOfConfig":"31"},{"size":2415,"mtime":1608746657526,"results":"55","hashOfConfig":"31"},{"size":136,"mtime":1608735608181,"results":"56","hashOfConfig":"31"},{"size":2686,"mtime":1608735608175,"results":"57","hashOfConfig":"31"},{"size":1742,"mtime":1608735608172,"results":"58","hashOfConfig":"31"},{"size":2422,"mtime":1608735608177,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d99sxb",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"73"},"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\AppWrapper\\index.js",["125"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GlobalCases from '../Tables/GlobalCases/GlobalCases';\r\nimport CasesContainer from '../Tables/CasesByCity/CasesContainer';\r\nimport Map from '../Tables/Map/MapContainer';\r\nimport GroupedTabs from '../Tabs';\r\nimport AllKindsOfCases from '../Tables/AllKindsOfCases';\r\nimport Charts from '../Chart';\r\n\r\nimport classes from './AppWrapper.module.scss';\r\n\r\nconst AppWrapper = ({ byAllCases, byCountries, activeCountry }) => {\r\n  const [parameters, setParameters] = useState({\r\n    globalCases: 'cases',\r\n    casesSelected: 'Cases by country'\r\n  });\r\n\r\n  const [statisticField, setStatisticField] = useState({\r\n    category: 'confirmed',\r\n    timePeriod: 'total'\r\n  });\r\n\r\n  const commonCaregories = ['confirmed', 'deaths', 'recovered'];\r\n  const timeCategories = ['total', 'today', 'total/100', 'today/100'];\r\n\r\n  return (\r\n    <main className={classes.main__container}>\r\n      <section className={'global__container'}>\r\n        <GlobalCases casesType={parameters.globalCases} />\r\n        <CasesContainer title={parameters.casesSelected} countries={byCountries} />\r\n      </section>\r\n\r\n      <section className='map__container'>\r\n        <Map stat={statisticField} byAllCases={byAllCases} cases={byCountries} pickedCountry={activeCountry} />\r\n        <GroupedTabs styleClass={'mapTab'} type={'category'} country={activeCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={commonCaregories} />\r\n        <GroupedTabs styleClass={'mapTab'} type={'timePeriod'} country={activeCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={timeCategories} />\r\n      </section>\r\n      <section className={'allCases__container'}>\r\n        <AllKindsOfCases />\r\n        <Charts />\r\n      </section>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    byAllCases: state.byAllCases,\r\n    byCountries: state.byCountries,\r\n    activeCountry: state.activeCountry\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppWrapper);\r\n",["126","127"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Header\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Footer\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\ErrorStub\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx",["128"],"import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Popup, CircleMarker, useMap } from 'react-leaflet'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Legend from './Legend';\r\nimport MapProvider from './MapProvider';\r\nimport { getStatistics } from '../../../helpers/getStatistics';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './map.scss';\r\n\r\nlet index = 0;\r\nconst DEFAULT_LOCATION = [53.90033950661763, 27.562463259670654];\r\nconst ZOOM = 1.5;\r\n\r\nconst useStyles = makeStyles({\r\n    mapContainer: {\r\n        backgroundColor: 'beige',\r\n        margin: '0 auto',\r\n        marginBottom: '50px',\r\n        height: '80vh',\r\n        width: '100%',\r\n        gridColumn: '2'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nconst getColor = num => {\r\n    return num > 1000000\r\n        ? \"#BD0026\"\r\n        : num > 500000\r\n            ? \"#E31A1C\"\r\n            : num > 100000\r\n                ? \"#FC4E2A\"\r\n                : num > 50000\r\n                    ? \"#FD8D3C\"\r\n                    : num > 10000\r\n                        ? \"#FEB24C\"\r\n                        : num > 1000\r\n                            ? \"#dfdc15\"\r\n                            : \"#4ddb0b\";\r\n}\r\n\r\nfunction Map({ stat, cases, pickedCountry }) {\r\n    const coords = Object.keys(pickedCountry).length ? [pickedCountry.countryInfo.lat, pickedCountry.countryInfo.long] : DEFAULT_LOCATION;\r\n    const [isNewLocation, setIsNewLocation] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsNewLocation(true);\r\n    }, [pickedCountry]);\r\n\r\n    const classes = useStyles();\r\n    const fillOptions = (color) => {\r\n        return {\r\n            fillColor: color,\r\n            color: color,\r\n            fillOpacity: 0.5\r\n        }\r\n    };\r\n\r\n    function getStaticticsValue(item) {\r\n        const { category, timePeriod } = stat;\r\n        const statType = category === 'confirmed' ? 'cases' : category.toString();\r\n        let staticticValue = timePeriod.includes('today') ? item[`today${statType.charAt(0).toUpperCase() + statType.slice(1)}`] : item[statType];\r\n\r\n        if (timePeriod.includes('100')) {\r\n            staticticValue = getStatistics(staticticValue, item.population);\r\n        }\r\n\r\n        return staticticValue;\r\n    };\r\n\r\n    function renderProvinceMarker(item) {\r\n        const { category, timePeriod } = stat;\r\n        const center = [item.coordinates.latitude, item.coordinates.longitude];\r\n        let staticticValue = getStaticticsValue(item);\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={1 * 5}\r\n            key={`${item.coordinates.latitude}_${++index}`}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{item.stats[category]}\r\n                <br />\r\n                {pickedCountry.country}, {item.province}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function renderCountryMarker(item, stat, idx, radius) {\r\n        const { category, timePeriod } = stat;\r\n        let staticticValue = getStaticticsValue(item);\r\n        const center = [item.countryInfo.lat, item.countryInfo.long];\r\n        const backColor = getColor(staticticValue);\r\n        return <CircleMarker\r\n            eventHandlers={{\r\n                mouseover: (e) => {\r\n                    e.target.openPopup();\r\n                },\r\n                mouseout: (e) => {\r\n                    e.target.closePopup();\r\n                }\r\n            }}\r\n\r\n            center={center}\r\n            pathOptions={fillOptions(backColor)}\r\n            radius={radius ? radius : 1 * 5}\r\n            key={++index}>\r\n            <Popup>\r\n                {`${category} ${timePeriod}`}:{staticticValue}\r\n                <br />\r\n                {item.country}\r\n            </Popup>\r\n        </CircleMarker>\r\n    };\r\n\r\n    function FlyToLocation({ item, stat }) {\r\n        const map = useMap();\r\n        useEffect(() => {\r\n            map.flyTo([item.countryInfo.lat, item.countryInfo.long], 5);\r\n            setIsNewLocation(false);\r\n        }, []);\r\n\r\n        return renderCountryMarker(item, stat, null, 10);\r\n    };\r\n\r\n    return (\r\n        < MapContainer className={classes.mapContainer} center={coords} minZoom={1} zoom={ZOOM} scrollWheelZoom={true}>\r\n            {Object.keys(pickedCountry).length && isNewLocation ? <FlyToLocation position={coords} item={pickedCountry} stat={stat} /> : null}\r\n            <MapProvider />\r\n            <TileLayer\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n\r\n            {cases.map((item, idx) => {\r\n                if (item.provinces !== null) {\r\n                    return item.provinces.map((provence) => renderProvinceMarker(provence))\r\n                }\r\n                return renderCountryMarker(item, stat, idx)\r\n            })}\r\n            <Legend />\r\n        </MapContainer >\r\n    )\r\n}\r\n\r\nexport default React.memo(Map);\r\n","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx",["129"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport CasesItem from './CasesItem';\r\nimport SearchInput from '../GlobalCases/SearchInput';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, Container, ListItem, ListItemText, Divider } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { connect } from 'react-redux';\r\nimport './cases.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    listItem: {\r\n        '&>span': {\r\n            display: 'flex',\r\n\r\n        }\r\n    },\r\n})\r\n\r\nexport function CasesContainer({ countries, title, newCases = [], setLocation, setCountry }) {\r\n    const [cases, setCases] = useState(newCases);\r\n    const [allCases, setAllCases] = useState(countries);\r\n    const [sortingValue, setSort] = useState({\r\n        parameter: 'country',\r\n        typeCountry: 'descending',\r\n        typeCases: 'descending',\r\n    })\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (cases.length === 0) {\r\n\r\n            setAllCases(countries)\r\n        }\r\n    }, [cases, countries])\r\n\r\n    function sortDown(parameter) {\r\n        if (parameter === 'country') {\r\n            setCases(cases.sort().reverse())\r\n            setSort({\r\n                ...sortingValue,\r\n                parameter,\r\n                typeCountry: 'ascending'\r\n            })\r\n        } else {\r\n            setCases(cases.sort(function (a, b) {\r\n                return b.cases - a.cases;\r\n            }))\r\n            setSort({\r\n                ...sortingValue,\r\n                parameter,\r\n                typeCases: 'ascending'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function sortUp(parameter) {\r\n        if (parameter === 'country') {\r\n            setCases(cases.sort(function (a, b) {\r\n                var nameA = a.country.toLowerCase(), nameB = b.country.toLowerCase()\r\n                if (nameA < nameB)\r\n                    return -1\r\n                if (nameA > nameB)\r\n                    return 1\r\n                return 0\r\n            }))\r\n            setSort({\r\n                ...sortingValue,\r\n                parameter,\r\n                typeCountry: 'descending'\r\n            })\r\n        } else {\r\n            setCases(cases.sort(function (a, b) {\r\n                return a.cases - b.cases\r\n            }))\r\n            setSort({\r\n                ...sortingValue,\r\n                parameter,\r\n                typeCases: 'descending'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function handleArrowClick(parameter, type) {\r\n        if (type === 'descending') {\r\n            sortDown(parameter)\r\n        } else {\r\n            sortUp(parameter)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <section className='cases__container'>\r\n            <SearchInput cases={allCases} setNewCases={setCases} />\r\n            <List className='cases__list'>\r\n                <h2 className='cases__title'>{title}</h2>\r\n                <ListItem  button>\r\n                    <ListItemText className={classes.listItem} onClick={() => {\r\n                        handleArrowClick('country', sortingValue.typeCountry)\r\n                    }}>\r\n                        Sort\r\n                        {sortingValue.typeCountry === 'descending' && sortingValue.parameter === 'country' ? <KeyboardArrowDownIcon /> : <KeyboardArrowUpIcon />}\r\n                    </ListItemText>\r\n                    <ListItemText className={classes.listItem} onClick={() => {\r\n                        handleArrowClick('cases', sortingValue.typeCases)\r\n                    }}>\r\n                        Sort\r\n                        {sortingValue.typeCases === 'descending' && sortingValue.parameter === 'cases' ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <Divider />\r\n                {cases.map((item, idx) =>\r\n                (<CasesItem item={item} cases={item.cases} country={item.country} key={`${idx}_${item.country}`} setCountry={setCountry} setLocation={setLocation} coordinates={[item.countryInfo.lat, item.countryInfo.long]} />\r\n                )\r\n                )}\r\n            </List>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        byAllCases: state.byAllCases,\r\n        byCountries: state.byCountries,\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\n\r\n// GlobalCases.propTypes = {\r\n//   total: PropTypes.number.isRequired,\r\n// };\r\nexport default connect(mapStateToProps)(CasesContainer);\r\n","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tabs\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Chart\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\AllKindsOfCases\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getInfoAboutCountry.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\tabsNames.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\chartConfig.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\chartHelpers.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx",["130"],"import React from 'react';\r\nimport { LayersControl, TileLayer } from 'react-leaflet'\r\nimport MinimapControl from './MiniMap'\r\n\r\nconst MapProvider = () => {\r\n\r\n    return (\r\n        <LayersControl position=\"topright\">\r\n            <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {/* <MinimapControl position=\"topright\" /> */}\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"OpenTopoMap\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\r\n                    url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmoothDark\">\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n            <LayersControl.BaseLayer name=\"Stamen.Toner\">\r\n                <TileLayer\r\n                    attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    subdomains='abcd'\r\n                    minZoom='0'\r\n                    maxZoom='20'\r\n                    url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\"\r\n                />\r\n            </LayersControl.BaseLayer>\r\n        </LayersControl>\r\n    )\r\n}\r\n\r\n\r\nexport default MapProvider;","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx",["131"],"import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport classes from './MapContainer.module.scss';\r\n\r\nconst Legend = () => {\r\n    const map = useMap();\r\n    console.log(map);\r\n\r\n    useEffect(() => {\r\n        const getColor = num => {\r\n            console.log(num > 10000, num, '800026')\r\n            return num > 1000000\r\n                ? \"#BD0026\"\r\n                : num > 500000\r\n                    ? \"#E31A1C\"\r\n                    : num > 100000\r\n                        ? \"#FC4E2A\"\r\n                        : num > 50000\r\n                            ? \"#FD8D3C\"\r\n                            : num > 10000\r\n                                ? \"#FEB24C\"\r\n                                : num > 1000\r\n                                    ? \"#dfdc15\"\r\n                                    : \"#4ddb0b\";\r\n        }\r\n\r\n        const legend = L.control({ position: \"bottomright\" });\r\n\r\n        legend.onAdd = () => {\r\n            const div = L.DomUtil.create(\"div\", \"info legend\");\r\n            const grades = [0, 1000, 10000, 50000, 100000, 500000, 1000000];\r\n            let labels = [];\r\n            let from;\r\n            let to;\r\n\r\n            for (let i = 0; i < grades.length; i++) {\r\n                from = grades[i];\r\n                to = grades[i + 1];\r\n                labels.push(\r\n                    `<div class=${classes.label__item}><span style=\"background:${getColor(from + 1)}\" class=${classes.label__color}></span><span> ${to ? to : +grades[i]}</span></div>`\r\n                );\r\n            }\r\n            div.innerHTML = labels.join(\"<br>\");\r\n            return div;\r\n        };\r\n\r\n        legend.addTo(map);\r\n    }, []);\r\n    return null;\r\n};\r\n\r\nexport default Legend;\r\n","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx",["132","133"],"import React, { useState, useCallback, useMemo } from 'react';\r\nimport { MapContainer, TileLayer, useMapEvent, Rectangle, useMapEvents, useMap } from 'react-leaflet'\r\n\r\nconst POSITION_CLASSES = {\r\n    bottomleft: 'leaflet-bottom leaflet-left',\r\n    bottomright: 'leaflet-bottom leaflet-right',\r\n    topleft: 'leaflet-top leaflet-left',\r\n    topright: 'leaflet-top leaflet-right',\r\n  }\r\n  \r\n  const BOUNDS_STYLE = { weight: 1 }\r\n  \r\n  function MinimapBounds({ parentMap, zoom }) {\r\n    const minimap = useMap()\r\n  \r\n    // Clicking a point on the minimap sets the parent's map center\r\n    const onClick = useCallback(\r\n      (e) => {\r\n        parentMap.setView(e.latlng, parentMap.getZoom())\r\n      },\r\n      [parentMap],\r\n    )\r\n    useMapEvent('click', onClick)\r\n  \r\n    // Keep track of bounds in state to trigger renders\r\n    const [bounds, setBounds] = useState(parentMap.getBounds())\r\n    const onChange = useCallback(() => {\r\n      setBounds(parentMap.getBounds())\r\n      // Update the minimap's view to match the parent map's center and zoom\r\n      minimap.setView(parentMap.getCenter(), zoom)\r\n    }, [minimap, parentMap, zoom])\r\n  \r\n    // Listen to events on the parent map\r\n    const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [])\r\n    useMapEvents({ instance: parentMap }, handlers)\r\n  \r\n    return <Rectangle bounds={bounds} pathOptions={BOUNDS_STYLE} />\r\n  }\r\n  \r\n  function MinimapControl({ position, zoom }) {\r\n    const parentMap = useMap()\r\n    const mapZoom = zoom || 0\r\n  \r\n    // Memoize the minimap so it's not affected by position changes\r\n    const minimap = useMemo(\r\n      () => (\r\n        <MapContainer\r\n          style={{ height: 80, width: 80 }}\r\n          center={parentMap.getCenter()}\r\n          zoom={mapZoom}\r\n          dragging={false}\r\n          doubleClickZoom={false}\r\n          scrollWheelZoom={false}\r\n          attributionControl={false}\r\n          zoomControl={false}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n          <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\r\n        </MapContainer>\r\n      ),\r\n      [],\r\n    )\r\n  \r\n    const positionClass =\r\n      (position && POSITION_CLASSES[position]) || POSITION_CLASSES.topright\r\n    return (\r\n      <div className={positionClass}>\r\n        <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\r\n      </div>\r\n    )\r\n  }\r\n  export default MinimapControl;",{"ruleId":"134","severity":1,"message":"135","line":13,"column":22,"nodeType":"136","messageId":"137","endLine":13,"endColumn":35},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":131,"column":12,"nodeType":"144","endLine":131,"endColumn":14,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"146","line":6,"column":16,"nodeType":"136","messageId":"137","endLine":6,"endColumn":25},{"ruleId":"134","severity":1,"message":"147","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":22},{"ruleId":"142","severity":1,"message":"148","line":49,"column":8,"nodeType":"144","endLine":49,"endColumn":10,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"150","line":34,"column":74,"nodeType":"144","endLine":34,"endColumn":76,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"152","line":60,"column":7,"nodeType":"144","endLine":60,"endColumn":9,"suggestions":"153"},"no-unused-vars","'setParameters' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'item.countryInfo.lat', 'item.countryInfo.long', and 'map'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'Container' is defined but never used.","'MinimapControl' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["157"],"React Hook useMemo has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["158"],"React Hook useMemo has missing dependencies: 'mapZoom' and 'parentMap'. Either include them or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [item.countryInfo.lat, item.countryInfo.long, map]",{"range":"168","text":"169"},"Update the dependencies array to be: [map]",{"range":"170","text":"171"},"Update the dependencies array to be: [onChange]",{"range":"172","text":"173"},"Update the dependencies array to be: [mapZoom, parentMap]",{"range":"174","text":"175"},[4355,4357],"[item.countryInfo.lat, item.countryInfo.long, map]",[1688,1690],"[map]",[1258,1260],"[onChange]",[2121,2123],"[mapZoom, parentMap]"]