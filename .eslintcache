[{"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js":"1","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx":"2","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js":"3","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js":"4","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx":"5","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\TabPanel.jsx":"6","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx":"7","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Switcher.jsx":"8","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js":"9","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js":"10","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx":"11","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx":"12","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx":"13","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx":"14","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js":"15","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js":"16","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js":"17","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js":"18","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx":"19","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js":"20"},{"size":295,"mtime":1608480979258,"results":"21","hashOfConfig":"22"},{"size":1577,"mtime":1608067052405,"results":"23","hashOfConfig":"22"},{"size":3510,"mtime":1608486010285,"results":"24","hashOfConfig":"22"},{"size":604,"mtime":1608062054171,"results":"25","hashOfConfig":"22"},{"size":6039,"mtime":1608491944168,"results":"26","hashOfConfig":"22"},{"size":2038,"mtime":1608492147195,"results":"27","hashOfConfig":"22"},{"size":1894,"mtime":1608294643186,"results":"28","hashOfConfig":"22"},{"size":1088,"mtime":1608074763221,"results":"29","hashOfConfig":"22"},{"size":798,"mtime":1608062054170,"results":"30","hashOfConfig":"22"},{"size":2194,"mtime":1608482735502,"results":"31","hashOfConfig":"22"},{"size":2639,"mtime":1608313453169,"results":"32","hashOfConfig":"22"},{"size":1690,"mtime":1608078871447,"results":"33","hashOfConfig":"22"},{"size":978,"mtime":1608067039836,"results":"34","hashOfConfig":"22"},{"size":1316,"mtime":1608387259885,"results":"35","hashOfConfig":"22"},{"size":221,"mtime":1608062054169,"results":"36","hashOfConfig":"22"},{"size":1280,"mtime":1608234573653,"results":"37","hashOfConfig":"22"},{"size":238,"mtime":1608062054169,"results":"38","hashOfConfig":"22"},{"size":26503,"mtime":1608480790172,"results":"39","hashOfConfig":"22"},{"size":2352,"mtime":1608313229107,"results":"40","hashOfConfig":"22"},{"size":130,"mtime":1608482974275,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1d99sxb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\index.js",[],["87","88"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\GlobalCases.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\App\\index.js",["89","90"],"import React, { useEffect, useState } from 'react';\r\nimport { CircularProgress, Container } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../../redux/actions';\r\nimport GlobalCases from '../Tables/GlobalCases/GlobalCases'\r\nimport CasesContainer from '../Tables/CasesByCity/CasesContainer'\r\nimport Map from '../Tables/Map/MapContainer'\r\nimport Switcher from '../Tables/Map/Switcher'\r\nimport MapTabContainer from '../Tables/Map/TabPanel'\r\nimport classes from './App.module.scss';\r\n\r\nfunction App({ byAllCases, byCountries, fetchData, loading }) {\r\n  const [parameters, setParameters] = useState({\r\n    globalCases: 'cases',\r\n    casesSelected: 'Cases by country'\r\n  })\r\n\r\n  const [statisticField, setStatisticField] = useState({\r\n    category: 'confirmed',\r\n    timePeriod: 'total'\r\n  });\r\n\r\n  const [location, setLocation] = useState([53.90033950661763, 27.562463259670654]);\r\n  const [pickedCountry, setCountry] = useState(null)\r\n  // useState({\r\n  //   active: 21024,\r\n  //   activePerOneMillion: 2225.26,\r\n  //   cases: 169648,\r\n  //   casesPerOneMillion: 17956,\r\n  //   continent: \"Europe\",\r\n  //   country: \"Belarus\",\r\n  //   countryInfo: {\r\n  //     flag: \"https://disease.sh/assets/img/flags/by.png\",\r\n  //     iso2: \"BY\",\r\n  //     iso3: \"BLR\",\r\n  //     lat: 53,\r\n  //     long: 28,\r\n  //     _id: 112,\r\n  //   },\r\n  //   critical: 0,\r\n  //   criticalPerOneMillion: 0,\r\n  //   deaths: 1308,\r\n  //   deathsPerOneMillion: 138,\r\n  //   oneCasePerPeople: 56,\r\n  //   oneDeathPerPeople: 7223,\r\n  //   oneTestPerPeople: 3,\r\n  //   population: 9447876,\r\n  //   provinces: null,\r\n  //   recovered: 147316,\r\n  //   recoveredPerOneMillion: 15592.5,\r\n  //   tests: 3718238,\r\n  //   testsPerOneMillion: 393553,\r\n  //   todayCases: 1917,\r\n  //   todayDeaths: 9,\r\n  //   todayRecovered: 1919,\r\n  //   updated: 1608296352291,\r\n  // });\r\n  const commonCaregories = ['confirmed', 'deaths', 'recovered'];\r\n  const timeCategories = ['total', 'today', 'total/100', 'today/100'];\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n      {loading && <CircularProgress />}\r\n      <main className={classes.main__container}>\r\n        <GlobalCases casesType={parameters.globalCases} />\r\n        <CasesContainer title={parameters.casesSelected} countries={byCountries} setCountry={setCountry} setLocation={setLocation} />\r\n        <Container className='map__container'>\r\n          <MapTabContainer type={'category'} country={pickedCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={commonCaregories} />\r\n          <MapTabContainer type ={'timePeriod'} country={pickedCountry} setStatisticField={setStatisticField} statisticField={statisticField} tabValues={timeCategories} />\r\n\r\n          {/* <Switcher setStat={setStatisticField} /> */}\r\n          <Map stat={statisticField} byAllCases={byAllCases} byCountries={byCountries} location={location} pickedCountry={pickedCountry} />\r\n        </Container>\r\n      </main>\r\n\r\n      {/* {!!byCountries.length && byCountries.map((item) => <div>{item.country}</div>)} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    byAllCases: state.byAllCases,\r\n    byCountries: state.byCountries,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchStateToProps = (dispatch) => {\r\n  return {\r\n    fetchData: () => dispatch(fetchData())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchStateToProps)(App);\r\n","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\store\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapContainer.jsx",["91"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\TabPanel.jsx",["92","93"],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesContainer.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Switcher.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\reducers\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\index.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MapProvider.jsx",["94"],"import React from 'react';\nimport { LayersControl, TileLayer } from 'react-leaflet'\nimport MinimapControl from './MiniMap'\n\nconst MapProvider = () => {\n\n    return (\n        <LayersControl position=\"topright\">\n            <LayersControl.BaseLayer checked name=\"OpenStreetMap.Mapnik\">\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {/* <MinimapControl position=\"topright\" /> */}\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"OpenStreetMap.BlackAndWhite\">\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png\"\n                />\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"OpenTopoMap\">\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n                    url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\"\n                />\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"Stadia.AlidadeSmoothDark\">\n                <TileLayer\n                    attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n                    url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\n                />\n            </LayersControl.BaseLayer>\n            <LayersControl.BaseLayer name=\"Stamen.Toner\">\n                <TileLayer\n                    attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    subdomains='abcd'\n                    minZoom='0'\n                    maxZoom='20'\n                    url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\"\n                />\n            </LayersControl.BaseLayer>\n        </LayersControl>\n    )\n}\n\n\nexport default MapProvider;","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\Legend.jsx",["95"],"import { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"react\";\nimport classes from './MapContainer.module.scss';\n\nconst Legend = () => {\n    const map = useMap();\n    console.log(map);\n\n    useEffect(() => {\n        const getColor = num => {\n            console.log(num > 10000, num, '800026')\n            return num > 1000000\n                ? \"#BD0026\"\n                : num > 500000\n                    ? \"#E31A1C\"\n                    : num > 100000\n                        ? \"#FC4E2A\"\n                        : num > 50000\n                            ? \"#FD8D3C\"\n                            : num > 10000\n                                ? \"#FEB24C\"\n                                : num > 1000\n                                    ? \"#dfdc15\"\n                                    : \"#4ddb0b\";\n        }\n\n        const legend = L.control({ position: \"bottomright\" });\n\n        legend.onAdd = () => {\n            const div = L.DomUtil.create(\"div\", \"info legend\");\n            const grades = [0, 1000, 10000, 50000, 100000, 500000, 1000000];\n            let labels = [];\n            let from;\n            let to;\n\n            for (let i = 0; i < grades.length; i++) {\n                from = grades[i];\n                to = grades[i + 1];\n\n                labels.push(\n                    `<div class=${classes.label__item}><span style=\"background:${getColor(from + 1)}\" class=${classes.label__color}></span><span> ${to ? to : +grades[i]}</span></div>`\n                );\n            }\n\n            div.innerHTML = labels.join(\"<br>\");\n            return div;\n        };\n\n        legend.addTo(map);\n    }, []);\n    return null;\n};\n\nexport default Legend;","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\GlobalCases\\SearchInput.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\CasesByCity\\CasesItem.jsx",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\redux\\actions\\actionTypes.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\services\\WorldometrsService.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getProvinceMap.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\models\\countriesCoordinates.js",[],"E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\components\\Tables\\Map\\MiniMap.jsx",["96","97"],"import React, { useState, useCallback, useMemo } from 'react';\nimport { MapContainer, TileLayer, useMapEvent, Rectangle, useMapEvents, useMap } from 'react-leaflet'\n\nconst POSITION_CLASSES = {\n    bottomleft: 'leaflet-bottom leaflet-left',\n    bottomright: 'leaflet-bottom leaflet-right',\n    topleft: 'leaflet-top leaflet-left',\n    topright: 'leaflet-top leaflet-right',\n  }\n  \n  const BOUNDS_STYLE = { weight: 1 }\n  \n  function MinimapBounds({ parentMap, zoom }) {\n    const minimap = useMap()\n  \n    // Clicking a point on the minimap sets the parent's map center\n    const onClick = useCallback(\n      (e) => {\n        parentMap.setView(e.latlng, parentMap.getZoom())\n      },\n      [parentMap],\n    )\n    useMapEvent('click', onClick)\n  \n    // Keep track of bounds in state to trigger renders\n    const [bounds, setBounds] = useState(parentMap.getBounds())\n    const onChange = useCallback(() => {\n      setBounds(parentMap.getBounds())\n      // Update the minimap's view to match the parent map's center and zoom\n      minimap.setView(parentMap.getCenter(), zoom)\n    }, [minimap, parentMap, zoom])\n  \n    // Listen to events on the parent map\n    const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [])\n    useMapEvents({ instance: parentMap }, handlers)\n  \n    return <Rectangle bounds={bounds} pathOptions={BOUNDS_STYLE} />\n  }\n  \n  function MinimapControl({ position, zoom }) {\n    const parentMap = useMap()\n    const mapZoom = zoom || 0\n  \n    // Memoize the minimap so it's not affected by position changes\n    const minimap = useMemo(\n      () => (\n        <MapContainer\n          style={{ height: 80, width: 80 }}\n          center={parentMap.getCenter()}\n          zoom={mapZoom}\n          dragging={false}\n          doubleClickZoom={false}\n          scrollWheelZoom={false}\n          attributionControl={false}\n          zoomControl={false}>\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n          <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\n        </MapContainer>\n      ),\n      [],\n    )\n  \n    const positionClass =\n      (position && POSITION_CLASSES[position]) || POSITION_CLASSES.topright\n    return (\n      <div className={positionClass}>\n        <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\n      </div>\n    )\n  }\n  export default MinimapControl;","E:\\masha\\rss2020\\covid\\covid-20-dashboard\\src\\helpers\\getStatistics.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":13,"column":22,"nodeType":"104","messageId":"105","endLine":13,"endColumn":35},{"ruleId":"102","severity":1,"message":"107","line":114,"column":15,"nodeType":"104","messageId":"105","endLine":114,"endColumn":21},{"ruleId":"102","severity":1,"message":"108","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"109","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"110","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":51,"column":8,"nodeType":"113","endLine":51,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":34,"column":74,"nodeType":"113","endLine":34,"endColumn":76,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":60,"column":7,"nodeType":"113","endLine":60,"endColumn":9,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Switcher' is defined but never used.","Identifier","unusedVar","'setParameters' is assigned a value but never used.","'radius' is assigned a value but never used.","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'MinimapControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["121"],"React Hook useMemo has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["122"],"React Hook useMemo has missing dependencies: 'mapZoom' and 'parentMap'. Either include them or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [map]",{"range":"130","text":"131"},"Update the dependencies array to be: [onChange]",{"range":"132","text":"133"},"Update the dependencies array to be: [mapZoom, parentMap]",{"range":"134","text":"135"},[1642,1644],"[map]",[1225,1227],"[onChange]",[2062,2064],"[mapZoom, parentMap]"]